//apply plugin: 'bintray-release'
apply plugin: 'com.novoda.bintray-release'

publish {
    userOrg = project.POM_DEVELOPER_ID
    groupId = project.PUBLISH_GROUP_ID
    artifactId = project.POM_ARTIFACT_ID
    version = project.VERSION_NAME
    uploadName = project.POM_ARTIFACT_ID
    description = project.POM_DESCRIPTION
    website = project.POM_URL
    autoPublish = true
    dryRun = false
    issueTracker = "${website}/issues"
    licences = [project.POM_LICENCE_NAME]

}
/*
project.publishing {
    publications {
        maven(MavenPublication) {
            groupId project.publish.groupId
            artifactId project.publish.artifactId
            version project.publish.version
            artifacts.all(project).each {
                delegate.artifact it
            }
            from artifacts.from(project)
        }
    }
}
*/

if (hasProperty('POM_DEVELOPER_ID')) {
    publish.bintrayUser = property('POM_DEVELOPER_ID')
}

if (hasProperty('APIBKI')) {
    publish.bintrayKey = property('APIBKI')
}

apply plugin: 'maven'
/*
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
    options.encoding = 'UTF-8'
}
artifacts {
    archives javadocJar
    archives sourcesJar
}*/

task createPom << {
    pom {
        project {
            name project.POM_DESCRIPTION
            packaging project.POM_PACKAGING
            description project.POM_DESCRIPTION
            url project.POM_URL
            version project.VERSION_NAME

            scm {
                url project.POM_SCM_CONNECTION
                connection project.POM_SCM_CONNECTION
                developerConnection project.POM_SCM_CONNECTION
            }

            licenses {
                license {
                    name project.POM_LICENCE_NAME
                }
            }

            developers {
                developer {
                    id project.POM_DEVELOPER_ID
                    name project.POM_DEVELOPER_NAME
                    email project.POM_EMAIL
                }
            }
        }
    }.writeTo("build/publications/maven/pom-default.xml")


}